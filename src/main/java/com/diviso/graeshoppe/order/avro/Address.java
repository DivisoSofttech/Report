/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.diviso.graeshoppe.order.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Address extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4513416060970487221L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Address\",\"namespace\":\"com.diviso.graeshoppe.order.avro\",\"fields\":[{\"name\":\"customerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pincode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"houseNoOrBuildingName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"roadNameAreaOrStreet\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"city\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"landmark\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addressType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phone\",\"type\":\"long\",\"default\":null},{\"name\":\"alternatePhone\",\"type\":[\"null\",\"long\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Address> ENCODER =
      new BinaryMessageEncoder<Address>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Address> DECODER =
      new BinaryMessageDecoder<Address>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Address> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Address> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Address>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Address to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Address from a ByteBuffer. */
  public static Address fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String customerId;
  @Deprecated public java.lang.String pincode;
  @Deprecated public java.lang.String houseNoOrBuildingName;
  @Deprecated public java.lang.String roadNameAreaOrStreet;
  @Deprecated public java.lang.String city;
  @Deprecated public java.lang.String state;
  @Deprecated public java.lang.String landmark;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String addressType;
  @Deprecated public long phone;
  @Deprecated public java.lang.Long alternatePhone;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Address() {}

  /**
   * All-args constructor.
   * @param customerId The new value for customerId
   * @param pincode The new value for pincode
   * @param houseNoOrBuildingName The new value for houseNoOrBuildingName
   * @param roadNameAreaOrStreet The new value for roadNameAreaOrStreet
   * @param city The new value for city
   * @param state The new value for state
   * @param landmark The new value for landmark
   * @param name The new value for name
   * @param addressType The new value for addressType
   * @param phone The new value for phone
   * @param alternatePhone The new value for alternatePhone
   */
  public Address(java.lang.String customerId, java.lang.String pincode, java.lang.String houseNoOrBuildingName, java.lang.String roadNameAreaOrStreet, java.lang.String city, java.lang.String state, java.lang.String landmark, java.lang.String name, java.lang.String addressType, java.lang.Long phone, java.lang.Long alternatePhone) {
    this.customerId = customerId;
    this.pincode = pincode;
    this.houseNoOrBuildingName = houseNoOrBuildingName;
    this.roadNameAreaOrStreet = roadNameAreaOrStreet;
    this.city = city;
    this.state = state;
    this.landmark = landmark;
    this.name = name;
    this.addressType = addressType;
    this.phone = phone;
    this.alternatePhone = alternatePhone;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return customerId;
    case 1: return pincode;
    case 2: return houseNoOrBuildingName;
    case 3: return roadNameAreaOrStreet;
    case 4: return city;
    case 5: return state;
    case 6: return landmark;
    case 7: return name;
    case 8: return addressType;
    case 9: return phone;
    case 10: return alternatePhone;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: customerId = (java.lang.String)value$; break;
    case 1: pincode = (java.lang.String)value$; break;
    case 2: houseNoOrBuildingName = (java.lang.String)value$; break;
    case 3: roadNameAreaOrStreet = (java.lang.String)value$; break;
    case 4: city = (java.lang.String)value$; break;
    case 5: state = (java.lang.String)value$; break;
    case 6: landmark = (java.lang.String)value$; break;
    case 7: name = (java.lang.String)value$; break;
    case 8: addressType = (java.lang.String)value$; break;
    case 9: phone = (java.lang.Long)value$; break;
    case 10: alternatePhone = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.String getCustomerId() {
    return customerId;
  }

  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.String value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'pincode' field.
   * @return The value of the 'pincode' field.
   */
  public java.lang.String getPincode() {
    return pincode;
  }

  /**
   * Sets the value of the 'pincode' field.
   * @param value the value to set.
   */
  public void setPincode(java.lang.String value) {
    this.pincode = value;
  }

  /**
   * Gets the value of the 'houseNoOrBuildingName' field.
   * @return The value of the 'houseNoOrBuildingName' field.
   */
  public java.lang.String getHouseNoOrBuildingName() {
    return houseNoOrBuildingName;
  }

  /**
   * Sets the value of the 'houseNoOrBuildingName' field.
   * @param value the value to set.
   */
  public void setHouseNoOrBuildingName(java.lang.String value) {
    this.houseNoOrBuildingName = value;
  }

  /**
   * Gets the value of the 'roadNameAreaOrStreet' field.
   * @return The value of the 'roadNameAreaOrStreet' field.
   */
  public java.lang.String getRoadNameAreaOrStreet() {
    return roadNameAreaOrStreet;
  }

  /**
   * Sets the value of the 'roadNameAreaOrStreet' field.
   * @param value the value to set.
   */
  public void setRoadNameAreaOrStreet(java.lang.String value) {
    this.roadNameAreaOrStreet = value;
  }

  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.String getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.String value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.String value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'landmark' field.
   * @return The value of the 'landmark' field.
   */
  public java.lang.String getLandmark() {
    return landmark;
  }

  /**
   * Sets the value of the 'landmark' field.
   * @param value the value to set.
   */
  public void setLandmark(java.lang.String value) {
    this.landmark = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'addressType' field.
   * @return The value of the 'addressType' field.
   */
  public java.lang.String getAddressType() {
    return addressType;
  }

  /**
   * Sets the value of the 'addressType' field.
   * @param value the value to set.
   */
  public void setAddressType(java.lang.String value) {
    this.addressType = value;
  }

  /**
   * Gets the value of the 'phone' field.
   * @return The value of the 'phone' field.
   */
  public java.lang.Long getPhone() {
    return phone;
  }

  /**
   * Sets the value of the 'phone' field.
   * @param value the value to set.
   */
  public void setPhone(java.lang.Long value) {
    this.phone = value;
  }

  /**
   * Gets the value of the 'alternatePhone' field.
   * @return The value of the 'alternatePhone' field.
   */
  public java.lang.Long getAlternatePhone() {
    return alternatePhone;
  }

  /**
   * Sets the value of the 'alternatePhone' field.
   * @param value the value to set.
   */
  public void setAlternatePhone(java.lang.Long value) {
    this.alternatePhone = value;
  }

  /**
   * Creates a new Address RecordBuilder.
   * @return A new Address RecordBuilder
   */
  public static com.diviso.graeshoppe.order.avro.Address.Builder newBuilder() {
    return new com.diviso.graeshoppe.order.avro.Address.Builder();
  }

  /**
   * Creates a new Address RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Address RecordBuilder
   */
  public static com.diviso.graeshoppe.order.avro.Address.Builder newBuilder(com.diviso.graeshoppe.order.avro.Address.Builder other) {
    return new com.diviso.graeshoppe.order.avro.Address.Builder(other);
  }

  /**
   * Creates a new Address RecordBuilder by copying an existing Address instance.
   * @param other The existing instance to copy.
   * @return A new Address RecordBuilder
   */
  public static com.diviso.graeshoppe.order.avro.Address.Builder newBuilder(com.diviso.graeshoppe.order.avro.Address other) {
    return new com.diviso.graeshoppe.order.avro.Address.Builder(other);
  }

  /**
   * RecordBuilder for Address instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Address>
    implements org.apache.avro.data.RecordBuilder<Address> {

    private java.lang.String customerId;
    private java.lang.String pincode;
    private java.lang.String houseNoOrBuildingName;
    private java.lang.String roadNameAreaOrStreet;
    private java.lang.String city;
    private java.lang.String state;
    private java.lang.String landmark;
    private java.lang.String name;
    private java.lang.String addressType;
    private long phone;
    private java.lang.Long alternatePhone;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.diviso.graeshoppe.order.avro.Address.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.customerId)) {
        this.customerId = data().deepCopy(fields()[0].schema(), other.customerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.pincode)) {
        this.pincode = data().deepCopy(fields()[1].schema(), other.pincode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.houseNoOrBuildingName)) {
        this.houseNoOrBuildingName = data().deepCopy(fields()[2].schema(), other.houseNoOrBuildingName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.roadNameAreaOrStreet)) {
        this.roadNameAreaOrStreet = data().deepCopy(fields()[3].schema(), other.roadNameAreaOrStreet);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.city)) {
        this.city = data().deepCopy(fields()[4].schema(), other.city);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.state)) {
        this.state = data().deepCopy(fields()[5].schema(), other.state);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.landmark)) {
        this.landmark = data().deepCopy(fields()[6].schema(), other.landmark);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.name)) {
        this.name = data().deepCopy(fields()[7].schema(), other.name);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.addressType)) {
        this.addressType = data().deepCopy(fields()[8].schema(), other.addressType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.phone)) {
        this.phone = data().deepCopy(fields()[9].schema(), other.phone);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.alternatePhone)) {
        this.alternatePhone = data().deepCopy(fields()[10].schema(), other.alternatePhone);
        fieldSetFlags()[10] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Address instance
     * @param other The existing instance to copy.
     */
    private Builder(com.diviso.graeshoppe.order.avro.Address other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.customerId)) {
        this.customerId = data().deepCopy(fields()[0].schema(), other.customerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.pincode)) {
        this.pincode = data().deepCopy(fields()[1].schema(), other.pincode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.houseNoOrBuildingName)) {
        this.houseNoOrBuildingName = data().deepCopy(fields()[2].schema(), other.houseNoOrBuildingName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.roadNameAreaOrStreet)) {
        this.roadNameAreaOrStreet = data().deepCopy(fields()[3].schema(), other.roadNameAreaOrStreet);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.city)) {
        this.city = data().deepCopy(fields()[4].schema(), other.city);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.state)) {
        this.state = data().deepCopy(fields()[5].schema(), other.state);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.landmark)) {
        this.landmark = data().deepCopy(fields()[6].schema(), other.landmark);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.name)) {
        this.name = data().deepCopy(fields()[7].schema(), other.name);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.addressType)) {
        this.addressType = data().deepCopy(fields()[8].schema(), other.addressType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.phone)) {
        this.phone = data().deepCopy(fields()[9].schema(), other.phone);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.alternatePhone)) {
        this.alternatePhone = data().deepCopy(fields()[10].schema(), other.alternatePhone);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.String getCustomerId() {
      return customerId;
    }

    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setCustomerId(java.lang.String value) {
      validate(fields()[0], value);
      this.customerId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'pincode' field.
      * @return The value.
      */
    public java.lang.String getPincode() {
      return pincode;
    }

    /**
      * Sets the value of the 'pincode' field.
      * @param value The value of 'pincode'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setPincode(java.lang.String value) {
      validate(fields()[1], value);
      this.pincode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'pincode' field has been set.
      * @return True if the 'pincode' field has been set, false otherwise.
      */
    public boolean hasPincode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'pincode' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearPincode() {
      pincode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'houseNoOrBuildingName' field.
      * @return The value.
      */
    public java.lang.String getHouseNoOrBuildingName() {
      return houseNoOrBuildingName;
    }

    /**
      * Sets the value of the 'houseNoOrBuildingName' field.
      * @param value The value of 'houseNoOrBuildingName'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setHouseNoOrBuildingName(java.lang.String value) {
      validate(fields()[2], value);
      this.houseNoOrBuildingName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'houseNoOrBuildingName' field has been set.
      * @return True if the 'houseNoOrBuildingName' field has been set, false otherwise.
      */
    public boolean hasHouseNoOrBuildingName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'houseNoOrBuildingName' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearHouseNoOrBuildingName() {
      houseNoOrBuildingName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'roadNameAreaOrStreet' field.
      * @return The value.
      */
    public java.lang.String getRoadNameAreaOrStreet() {
      return roadNameAreaOrStreet;
    }

    /**
      * Sets the value of the 'roadNameAreaOrStreet' field.
      * @param value The value of 'roadNameAreaOrStreet'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setRoadNameAreaOrStreet(java.lang.String value) {
      validate(fields()[3], value);
      this.roadNameAreaOrStreet = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'roadNameAreaOrStreet' field has been set.
      * @return True if the 'roadNameAreaOrStreet' field has been set, false otherwise.
      */
    public boolean hasRoadNameAreaOrStreet() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'roadNameAreaOrStreet' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearRoadNameAreaOrStreet() {
      roadNameAreaOrStreet = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.String getCity() {
      return city;
    }

    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setCity(java.lang.String value) {
      validate(fields()[4], value);
      this.city = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearCity() {
      city = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.String getState() {
      return state;
    }

    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setState(java.lang.String value) {
      validate(fields()[5], value);
      this.state = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearState() {
      state = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'landmark' field.
      * @return The value.
      */
    public java.lang.String getLandmark() {
      return landmark;
    }

    /**
      * Sets the value of the 'landmark' field.
      * @param value The value of 'landmark'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setLandmark(java.lang.String value) {
      validate(fields()[6], value);
      this.landmark = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'landmark' field has been set.
      * @return True if the 'landmark' field has been set, false otherwise.
      */
    public boolean hasLandmark() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'landmark' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearLandmark() {
      landmark = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setName(java.lang.String value) {
      validate(fields()[7], value);
      this.name = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearName() {
      name = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressType' field.
      * @return The value.
      */
    public java.lang.String getAddressType() {
      return addressType;
    }

    /**
      * Sets the value of the 'addressType' field.
      * @param value The value of 'addressType'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setAddressType(java.lang.String value) {
      validate(fields()[8], value);
      this.addressType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'addressType' field has been set.
      * @return True if the 'addressType' field has been set, false otherwise.
      */
    public boolean hasAddressType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'addressType' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearAddressType() {
      addressType = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * @return The value.
      */
    public java.lang.Long getPhone() {
      return phone;
    }

    /**
      * Sets the value of the 'phone' field.
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setPhone(long value) {
      validate(fields()[9], value);
      this.phone = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'phone' field has been set.
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'phone' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearPhone() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'alternatePhone' field.
      * @return The value.
      */
    public java.lang.Long getAlternatePhone() {
      return alternatePhone;
    }

    /**
      * Sets the value of the 'alternatePhone' field.
      * @param value The value of 'alternatePhone'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder setAlternatePhone(java.lang.Long value) {
      validate(fields()[10], value);
      this.alternatePhone = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'alternatePhone' field has been set.
      * @return True if the 'alternatePhone' field has been set, false otherwise.
      */
    public boolean hasAlternatePhone() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'alternatePhone' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Address.Builder clearAlternatePhone() {
      alternatePhone = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Address build() {
      try {
        Address record = new Address();
        record.customerId = fieldSetFlags()[0] ? this.customerId : (java.lang.String) defaultValue(fields()[0]);
        record.pincode = fieldSetFlags()[1] ? this.pincode : (java.lang.String) defaultValue(fields()[1]);
        record.houseNoOrBuildingName = fieldSetFlags()[2] ? this.houseNoOrBuildingName : (java.lang.String) defaultValue(fields()[2]);
        record.roadNameAreaOrStreet = fieldSetFlags()[3] ? this.roadNameAreaOrStreet : (java.lang.String) defaultValue(fields()[3]);
        record.city = fieldSetFlags()[4] ? this.city : (java.lang.String) defaultValue(fields()[4]);
        record.state = fieldSetFlags()[5] ? this.state : (java.lang.String) defaultValue(fields()[5]);
        record.landmark = fieldSetFlags()[6] ? this.landmark : (java.lang.String) defaultValue(fields()[6]);
        record.name = fieldSetFlags()[7] ? this.name : (java.lang.String) defaultValue(fields()[7]);
        record.addressType = fieldSetFlags()[8] ? this.addressType : (java.lang.String) defaultValue(fields()[8]);
        record.phone = fieldSetFlags()[9] ? this.phone : (java.lang.Long) defaultValue(fields()[9]);
        record.alternatePhone = fieldSetFlags()[10] ? this.alternatePhone : (java.lang.Long) defaultValue(fields()[10]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Address>
    WRITER$ = (org.apache.avro.io.DatumWriter<Address>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Address>
    READER$ = (org.apache.avro.io.DatumReader<Address>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
