/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.diviso.graeshoppe.order.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrderState extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8174111956499104544L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderState\",\"namespace\":\"com.diviso.graeshoppe.order.avro\",\"fields\":[{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"targetId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderState> ENCODER =
      new BinaryMessageEncoder<OrderState>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderState> DECODER =
      new BinaryMessageDecoder<OrderState>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<OrderState> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<OrderState> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderState>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this OrderState to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a OrderState from a ByteBuffer. */
  public static OrderState fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String state;
  @Deprecated public java.lang.String message;
  @Deprecated public java.lang.String targetId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderState() {}

  /**
   * All-args constructor.
   * @param state The new value for state
   * @param message The new value for message
   * @param targetId The new value for targetId
   */
  public OrderState(java.lang.String state, java.lang.String message, java.lang.String targetId) {
    this.state = state;
    this.message = message;
    this.targetId = targetId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return state;
    case 1: return message;
    case 2: return targetId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: state = (java.lang.String)value$; break;
    case 1: message = (java.lang.String)value$; break;
    case 2: targetId = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.String value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.String getMessage() {
    return message;
  }

  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.String value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'targetId' field.
   * @return The value of the 'targetId' field.
   */
  public java.lang.String getTargetId() {
    return targetId;
  }

  /**
   * Sets the value of the 'targetId' field.
   * @param value the value to set.
   */
  public void setTargetId(java.lang.String value) {
    this.targetId = value;
  }

  /**
   * Creates a new OrderState RecordBuilder.
   * @return A new OrderState RecordBuilder
   */
  public static com.diviso.graeshoppe.order.avro.OrderState.Builder newBuilder() {
    return new com.diviso.graeshoppe.order.avro.OrderState.Builder();
  }

  /**
   * Creates a new OrderState RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderState RecordBuilder
   */
  public static com.diviso.graeshoppe.order.avro.OrderState.Builder newBuilder(com.diviso.graeshoppe.order.avro.OrderState.Builder other) {
    return new com.diviso.graeshoppe.order.avro.OrderState.Builder(other);
  }

  /**
   * Creates a new OrderState RecordBuilder by copying an existing OrderState instance.
   * @param other The existing instance to copy.
   * @return A new OrderState RecordBuilder
   */
  public static com.diviso.graeshoppe.order.avro.OrderState.Builder newBuilder(com.diviso.graeshoppe.order.avro.OrderState other) {
    return new com.diviso.graeshoppe.order.avro.OrderState.Builder(other);
  }

  /**
   * RecordBuilder for OrderState instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderState>
    implements org.apache.avro.data.RecordBuilder<OrderState> {

    private java.lang.String state;
    private java.lang.String message;
    private java.lang.String targetId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.diviso.graeshoppe.order.avro.OrderState.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.state)) {
        this.state = data().deepCopy(fields()[0].schema(), other.state);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.targetId)) {
        this.targetId = data().deepCopy(fields()[2].schema(), other.targetId);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing OrderState instance
     * @param other The existing instance to copy.
     */
    private Builder(com.diviso.graeshoppe.order.avro.OrderState other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.state)) {
        this.state = data().deepCopy(fields()[0].schema(), other.state);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.targetId)) {
        this.targetId = data().deepCopy(fields()[2].schema(), other.targetId);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.String getState() {
      return state;
    }

    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.OrderState.Builder setState(java.lang.String value) {
      validate(fields()[0], value);
      this.state = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.OrderState.Builder clearState() {
      state = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.String getMessage() {
      return message;
    }

    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.OrderState.Builder setMessage(java.lang.String value) {
      validate(fields()[1], value);
      this.message = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.OrderState.Builder clearMessage() {
      message = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'targetId' field.
      * @return The value.
      */
    public java.lang.String getTargetId() {
      return targetId;
    }

    /**
      * Sets the value of the 'targetId' field.
      * @param value The value of 'targetId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.OrderState.Builder setTargetId(java.lang.String value) {
      validate(fields()[2], value);
      this.targetId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'targetId' field has been set.
      * @return True if the 'targetId' field has been set, false otherwise.
      */
    public boolean hasTargetId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'targetId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.OrderState.Builder clearTargetId() {
      targetId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderState build() {
      try {
        OrderState record = new OrderState();
        record.state = fieldSetFlags()[0] ? this.state : (java.lang.String) defaultValue(fields()[0]);
        record.message = fieldSetFlags()[1] ? this.message : (java.lang.String) defaultValue(fields()[1]);
        record.targetId = fieldSetFlags()[2] ? this.targetId : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderState>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderState>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderState>
    READER$ = (org.apache.avro.io.DatumReader<OrderState>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
