/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.diviso.graeshoppe.order.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Order extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1538662884740285308L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Order\",\"namespace\":\"com.diviso.graeshoppe.order.avro\",\"fields\":[{\"name\":\"orderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"customerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"storeId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"date\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"subTotal\",\"type\":\"double\"},{\"name\":\"discountAmount\",\"type\":\"double\",\"default\":0.0},{\"name\":\"grandTotal\",\"type\":\"double\"},{\"name\":\"paymentRef\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"paymentMode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"allergyNote\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"preOrderDate\",\"type\":\"long\",\"default\":0,\"logicalType\":\"date\"},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"timeZone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerPhone\",\"type\":\"long\",\"default\":null},{\"name\":\"orderCountRestaurant\",\"type\":[\"null\",\"long\"]},{\"name\":\"orderCountgraeshoppe\",\"type\":[\"null\",\"long\"]},{\"name\":\"deliveryInfo\",\"type\":{\"type\":\"record\",\"name\":\"DeliveryInfo\",\"fields\":[{\"name\":\"deliveryType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"deliveryCharge\",\"type\":[\"null\",\"double\"],\"default\":0.0},{\"name\":\"deliveryNotes\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deliveryAddress\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"customerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pincode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"houseNoOrBuildingName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"roadNameAreaOrStreet\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"city\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"landmark\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addressType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phone\",\"type\":\"long\",\"default\":null},{\"name\":\"alternatePhone\",\"type\":[\"null\",\"long\"],\"default\":null}]}],\"default\":null}]}},{\"name\":\"approvalDetails\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ApprovalDetails\",\"fields\":[{\"name\":\"acceptedAt\",\"type\":\"long\",\"default\":0,\"logicalType\":\"date\"},{\"name\":\"expectedDelivery\",\"type\":[\"null\",\"long\"],\"default\":null,\"logicalType\":\"date\"},{\"name\":\"decision\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}]},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Status\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}]},{\"name\":\"orderLines\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrderLine\",\"fields\":[{\"name\":\"productId\",\"type\":\"long\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"pricePerUnit\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"},{\"name\":\"auxilaryOrderLines\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AuxilaryOrderLine\",\"fields\":[{\"name\":\"productId\",\"type\":\"long\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"pricePerUnit\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}]}}}]}}},{\"name\":\"offerLines\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Offer\",\"fields\":[{\"name\":\"offerRef\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"discountAmount\",\"type\":\"double\"}]}}},{\"name\":\"eventType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"nextTaskId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Order> ENCODER =
      new BinaryMessageEncoder<Order>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Order> DECODER =
      new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Order> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Order> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Order to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Order from a ByteBuffer. */
  public static Order fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String orderId;
  @Deprecated public java.lang.String customerId;
  @Deprecated public java.lang.String storeId;
  @Deprecated public long date;
  @Deprecated public double subTotal;
  @Deprecated public double discountAmount;
  @Deprecated public double grandTotal;
  @Deprecated public java.lang.String paymentRef;
  @Deprecated public java.lang.String paymentMode;
  @Deprecated public java.lang.String allergyNote;
  @Deprecated public long preOrderDate;
  @Deprecated public java.lang.String email;
  @Deprecated public java.lang.String timeZone;
  @Deprecated public long customerPhone;
  @Deprecated public java.lang.Long orderCountRestaurant;
  @Deprecated public java.lang.Long orderCountgraeshoppe;
  @Deprecated public com.diviso.graeshoppe.order.avro.DeliveryInfo deliveryInfo;
  @Deprecated public com.diviso.graeshoppe.order.avro.ApprovalDetails approvalDetails;
  @Deprecated public com.diviso.graeshoppe.order.avro.Status status;
  @Deprecated public java.util.List<com.diviso.graeshoppe.order.avro.OrderLine> orderLines;
  @Deprecated public java.util.List<com.diviso.graeshoppe.order.avro.Offer> offerLines;
  @Deprecated public java.lang.String eventType;
  @Deprecated public java.lang.String nextTaskId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Order() {}

  /**
   * All-args constructor.
   * @param orderId The new value for orderId
   * @param customerId The new value for customerId
   * @param storeId The new value for storeId
   * @param date The new value for date
   * @param subTotal The new value for subTotal
   * @param discountAmount The new value for discountAmount
   * @param grandTotal The new value for grandTotal
   * @param paymentRef The new value for paymentRef
   * @param paymentMode The new value for paymentMode
   * @param allergyNote The new value for allergyNote
   * @param preOrderDate The new value for preOrderDate
   * @param email The new value for email
   * @param timeZone The new value for timeZone
   * @param customerPhone The new value for customerPhone
   * @param orderCountRestaurant The new value for orderCountRestaurant
   * @param orderCountgraeshoppe The new value for orderCountgraeshoppe
   * @param deliveryInfo The new value for deliveryInfo
   * @param approvalDetails The new value for approvalDetails
   * @param status The new value for status
   * @param orderLines The new value for orderLines
   * @param offerLines The new value for offerLines
   * @param eventType The new value for eventType
   * @param nextTaskId The new value for nextTaskId
   */
  public Order(java.lang.String orderId, java.lang.String customerId, java.lang.String storeId, java.lang.Long date, java.lang.Double subTotal, java.lang.Double discountAmount, java.lang.Double grandTotal, java.lang.String paymentRef, java.lang.String paymentMode, java.lang.String allergyNote, java.lang.Long preOrderDate, java.lang.String email, java.lang.String timeZone, java.lang.Long customerPhone, java.lang.Long orderCountRestaurant, java.lang.Long orderCountgraeshoppe, com.diviso.graeshoppe.order.avro.DeliveryInfo deliveryInfo, com.diviso.graeshoppe.order.avro.ApprovalDetails approvalDetails, com.diviso.graeshoppe.order.avro.Status status, java.util.List<com.diviso.graeshoppe.order.avro.OrderLine> orderLines, java.util.List<com.diviso.graeshoppe.order.avro.Offer> offerLines, java.lang.String eventType, java.lang.String nextTaskId) {
    this.orderId = orderId;
    this.customerId = customerId;
    this.storeId = storeId;
    this.date = date;
    this.subTotal = subTotal;
    this.discountAmount = discountAmount;
    this.grandTotal = grandTotal;
    this.paymentRef = paymentRef;
    this.paymentMode = paymentMode;
    this.allergyNote = allergyNote;
    this.preOrderDate = preOrderDate;
    this.email = email;
    this.timeZone = timeZone;
    this.customerPhone = customerPhone;
    this.orderCountRestaurant = orderCountRestaurant;
    this.orderCountgraeshoppe = orderCountgraeshoppe;
    this.deliveryInfo = deliveryInfo;
    this.approvalDetails = approvalDetails;
    this.status = status;
    this.orderLines = orderLines;
    this.offerLines = offerLines;
    this.eventType = eventType;
    this.nextTaskId = nextTaskId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return orderId;
    case 1: return customerId;
    case 2: return storeId;
    case 3: return date;
    case 4: return subTotal;
    case 5: return discountAmount;
    case 6: return grandTotal;
    case 7: return paymentRef;
    case 8: return paymentMode;
    case 9: return allergyNote;
    case 10: return preOrderDate;
    case 11: return email;
    case 12: return timeZone;
    case 13: return customerPhone;
    case 14: return orderCountRestaurant;
    case 15: return orderCountgraeshoppe;
    case 16: return deliveryInfo;
    case 17: return approvalDetails;
    case 18: return status;
    case 19: return orderLines;
    case 20: return offerLines;
    case 21: return eventType;
    case 22: return nextTaskId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: orderId = (java.lang.String)value$; break;
    case 1: customerId = (java.lang.String)value$; break;
    case 2: storeId = (java.lang.String)value$; break;
    case 3: date = (java.lang.Long)value$; break;
    case 4: subTotal = (java.lang.Double)value$; break;
    case 5: discountAmount = (java.lang.Double)value$; break;
    case 6: grandTotal = (java.lang.Double)value$; break;
    case 7: paymentRef = (java.lang.String)value$; break;
    case 8: paymentMode = (java.lang.String)value$; break;
    case 9: allergyNote = (java.lang.String)value$; break;
    case 10: preOrderDate = (java.lang.Long)value$; break;
    case 11: email = (java.lang.String)value$; break;
    case 12: timeZone = (java.lang.String)value$; break;
    case 13: customerPhone = (java.lang.Long)value$; break;
    case 14: orderCountRestaurant = (java.lang.Long)value$; break;
    case 15: orderCountgraeshoppe = (java.lang.Long)value$; break;
    case 16: deliveryInfo = (com.diviso.graeshoppe.order.avro.DeliveryInfo)value$; break;
    case 17: approvalDetails = (com.diviso.graeshoppe.order.avro.ApprovalDetails)value$; break;
    case 18: status = (com.diviso.graeshoppe.order.avro.Status)value$; break;
    case 19: orderLines = (java.util.List<com.diviso.graeshoppe.order.avro.OrderLine>)value$; break;
    case 20: offerLines = (java.util.List<com.diviso.graeshoppe.order.avro.Offer>)value$; break;
    case 21: eventType = (java.lang.String)value$; break;
    case 22: nextTaskId = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public java.lang.String getOrderId() {
    return orderId;
  }

  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(java.lang.String value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.String getCustomerId() {
    return customerId;
  }

  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.String value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'storeId' field.
   * @return The value of the 'storeId' field.
   */
  public java.lang.String getStoreId() {
    return storeId;
  }

  /**
   * Sets the value of the 'storeId' field.
   * @param value the value to set.
   */
  public void setStoreId(java.lang.String value) {
    this.storeId = value;
  }

  /**
   * Gets the value of the 'date' field.
   * @return The value of the 'date' field.
   */
  public java.lang.Long getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.Long value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'subTotal' field.
   * @return The value of the 'subTotal' field.
   */
  public java.lang.Double getSubTotal() {
    return subTotal;
  }

  /**
   * Sets the value of the 'subTotal' field.
   * @param value the value to set.
   */
  public void setSubTotal(java.lang.Double value) {
    this.subTotal = value;
  }

  /**
   * Gets the value of the 'discountAmount' field.
   * @return The value of the 'discountAmount' field.
   */
  public java.lang.Double getDiscountAmount() {
    return discountAmount;
  }

  /**
   * Sets the value of the 'discountAmount' field.
   * @param value the value to set.
   */
  public void setDiscountAmount(java.lang.Double value) {
    this.discountAmount = value;
  }

  /**
   * Gets the value of the 'grandTotal' field.
   * @return The value of the 'grandTotal' field.
   */
  public java.lang.Double getGrandTotal() {
    return grandTotal;
  }

  /**
   * Sets the value of the 'grandTotal' field.
   * @param value the value to set.
   */
  public void setGrandTotal(java.lang.Double value) {
    this.grandTotal = value;
  }

  /**
   * Gets the value of the 'paymentRef' field.
   * @return The value of the 'paymentRef' field.
   */
  public java.lang.String getPaymentRef() {
    return paymentRef;
  }

  /**
   * Sets the value of the 'paymentRef' field.
   * @param value the value to set.
   */
  public void setPaymentRef(java.lang.String value) {
    this.paymentRef = value;
  }

  /**
   * Gets the value of the 'paymentMode' field.
   * @return The value of the 'paymentMode' field.
   */
  public java.lang.String getPaymentMode() {
    return paymentMode;
  }

  /**
   * Sets the value of the 'paymentMode' field.
   * @param value the value to set.
   */
  public void setPaymentMode(java.lang.String value) {
    this.paymentMode = value;
  }

  /**
   * Gets the value of the 'allergyNote' field.
   * @return The value of the 'allergyNote' field.
   */
  public java.lang.String getAllergyNote() {
    return allergyNote;
  }

  /**
   * Sets the value of the 'allergyNote' field.
   * @param value the value to set.
   */
  public void setAllergyNote(java.lang.String value) {
    this.allergyNote = value;
  }

  /**
   * Gets the value of the 'preOrderDate' field.
   * @return The value of the 'preOrderDate' field.
   */
  public java.lang.Long getPreOrderDate() {
    return preOrderDate;
  }

  /**
   * Sets the value of the 'preOrderDate' field.
   * @param value the value to set.
   */
  public void setPreOrderDate(java.lang.Long value) {
    this.preOrderDate = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'timeZone' field.
   * @return The value of the 'timeZone' field.
   */
  public java.lang.String getTimeZone() {
    return timeZone;
  }

  /**
   * Sets the value of the 'timeZone' field.
   * @param value the value to set.
   */
  public void setTimeZone(java.lang.String value) {
    this.timeZone = value;
  }

  /**
   * Gets the value of the 'customerPhone' field.
   * @return The value of the 'customerPhone' field.
   */
  public java.lang.Long getCustomerPhone() {
    return customerPhone;
  }

  /**
   * Sets the value of the 'customerPhone' field.
   * @param value the value to set.
   */
  public void setCustomerPhone(java.lang.Long value) {
    this.customerPhone = value;
  }

  /**
   * Gets the value of the 'orderCountRestaurant' field.
   * @return The value of the 'orderCountRestaurant' field.
   */
  public java.lang.Long getOrderCountRestaurant() {
    return orderCountRestaurant;
  }

  /**
   * Sets the value of the 'orderCountRestaurant' field.
   * @param value the value to set.
   */
  public void setOrderCountRestaurant(java.lang.Long value) {
    this.orderCountRestaurant = value;
  }

  /**
   * Gets the value of the 'orderCountgraeshoppe' field.
   * @return The value of the 'orderCountgraeshoppe' field.
   */
  public java.lang.Long getOrderCountgraeshoppe() {
    return orderCountgraeshoppe;
  }

  /**
   * Sets the value of the 'orderCountgraeshoppe' field.
   * @param value the value to set.
   */
  public void setOrderCountgraeshoppe(java.lang.Long value) {
    this.orderCountgraeshoppe = value;
  }

  /**
   * Gets the value of the 'deliveryInfo' field.
   * @return The value of the 'deliveryInfo' field.
   */
  public com.diviso.graeshoppe.order.avro.DeliveryInfo getDeliveryInfo() {
    return deliveryInfo;
  }

  /**
   * Sets the value of the 'deliveryInfo' field.
   * @param value the value to set.
   */
  public void setDeliveryInfo(com.diviso.graeshoppe.order.avro.DeliveryInfo value) {
    this.deliveryInfo = value;
  }

  /**
   * Gets the value of the 'approvalDetails' field.
   * @return The value of the 'approvalDetails' field.
   */
  public com.diviso.graeshoppe.order.avro.ApprovalDetails getApprovalDetails() {
    return approvalDetails;
  }

  /**
   * Sets the value of the 'approvalDetails' field.
   * @param value the value to set.
   */
  public void setApprovalDetails(com.diviso.graeshoppe.order.avro.ApprovalDetails value) {
    this.approvalDetails = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.diviso.graeshoppe.order.avro.Status getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.diviso.graeshoppe.order.avro.Status value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'orderLines' field.
   * @return The value of the 'orderLines' field.
   */
  public java.util.List<com.diviso.graeshoppe.order.avro.OrderLine> getOrderLines() {
    return orderLines;
  }

  /**
   * Sets the value of the 'orderLines' field.
   * @param value the value to set.
   */
  public void setOrderLines(java.util.List<com.diviso.graeshoppe.order.avro.OrderLine> value) {
    this.orderLines = value;
  }

  /**
   * Gets the value of the 'offerLines' field.
   * @return The value of the 'offerLines' field.
   */
  public java.util.List<com.diviso.graeshoppe.order.avro.Offer> getOfferLines() {
    return offerLines;
  }

  /**
   * Sets the value of the 'offerLines' field.
   * @param value the value to set.
   */
  public void setOfferLines(java.util.List<com.diviso.graeshoppe.order.avro.Offer> value) {
    this.offerLines = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.String getEventType() {
    return eventType;
  }

  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.String value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'nextTaskId' field.
   * @return The value of the 'nextTaskId' field.
   */
  public java.lang.String getNextTaskId() {
    return nextTaskId;
  }

  /**
   * Sets the value of the 'nextTaskId' field.
   * @param value the value to set.
   */
  public void setNextTaskId(java.lang.String value) {
    this.nextTaskId = value;
  }

  /**
   * Creates a new Order RecordBuilder.
   * @return A new Order RecordBuilder
   */
  public static com.diviso.graeshoppe.order.avro.Order.Builder newBuilder() {
    return new com.diviso.graeshoppe.order.avro.Order.Builder();
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Order RecordBuilder
   */
  public static com.diviso.graeshoppe.order.avro.Order.Builder newBuilder(com.diviso.graeshoppe.order.avro.Order.Builder other) {
    return new com.diviso.graeshoppe.order.avro.Order.Builder(other);
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Order instance.
   * @param other The existing instance to copy.
   * @return A new Order RecordBuilder
   */
  public static com.diviso.graeshoppe.order.avro.Order.Builder newBuilder(com.diviso.graeshoppe.order.avro.Order other) {
    return new com.diviso.graeshoppe.order.avro.Order.Builder(other);
  }

  /**
   * RecordBuilder for Order instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Order>
    implements org.apache.avro.data.RecordBuilder<Order> {

    private java.lang.String orderId;
    private java.lang.String customerId;
    private java.lang.String storeId;
    private long date;
    private double subTotal;
    private double discountAmount;
    private double grandTotal;
    private java.lang.String paymentRef;
    private java.lang.String paymentMode;
    private java.lang.String allergyNote;
    private long preOrderDate;
    private java.lang.String email;
    private java.lang.String timeZone;
    private long customerPhone;
    private java.lang.Long orderCountRestaurant;
    private java.lang.Long orderCountgraeshoppe;
    private com.diviso.graeshoppe.order.avro.DeliveryInfo deliveryInfo;
    private com.diviso.graeshoppe.order.avro.DeliveryInfo.Builder deliveryInfoBuilder;
    private com.diviso.graeshoppe.order.avro.ApprovalDetails approvalDetails;
    private com.diviso.graeshoppe.order.avro.ApprovalDetails.Builder approvalDetailsBuilder;
    private com.diviso.graeshoppe.order.avro.Status status;
    private com.diviso.graeshoppe.order.avro.Status.Builder statusBuilder;
    private java.util.List<com.diviso.graeshoppe.order.avro.OrderLine> orderLines;
    private java.util.List<com.diviso.graeshoppe.order.avro.Offer> offerLines;
    private java.lang.String eventType;
    private java.lang.String nextTaskId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.diviso.graeshoppe.order.avro.Order.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customerId)) {
        this.customerId = data().deepCopy(fields()[1].schema(), other.customerId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.storeId)) {
        this.storeId = data().deepCopy(fields()[2].schema(), other.storeId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.date)) {
        this.date = data().deepCopy(fields()[3].schema(), other.date);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.subTotal)) {
        this.subTotal = data().deepCopy(fields()[4].schema(), other.subTotal);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.discountAmount)) {
        this.discountAmount = data().deepCopy(fields()[5].schema(), other.discountAmount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.grandTotal)) {
        this.grandTotal = data().deepCopy(fields()[6].schema(), other.grandTotal);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.paymentRef)) {
        this.paymentRef = data().deepCopy(fields()[7].schema(), other.paymentRef);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.paymentMode)) {
        this.paymentMode = data().deepCopy(fields()[8].schema(), other.paymentMode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.allergyNote)) {
        this.allergyNote = data().deepCopy(fields()[9].schema(), other.allergyNote);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.preOrderDate)) {
        this.preOrderDate = data().deepCopy(fields()[10].schema(), other.preOrderDate);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.email)) {
        this.email = data().deepCopy(fields()[11].schema(), other.email);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.timeZone)) {
        this.timeZone = data().deepCopy(fields()[12].schema(), other.timeZone);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.customerPhone)) {
        this.customerPhone = data().deepCopy(fields()[13].schema(), other.customerPhone);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.orderCountRestaurant)) {
        this.orderCountRestaurant = data().deepCopy(fields()[14].schema(), other.orderCountRestaurant);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.orderCountgraeshoppe)) {
        this.orderCountgraeshoppe = data().deepCopy(fields()[15].schema(), other.orderCountgraeshoppe);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.deliveryInfo)) {
        this.deliveryInfo = data().deepCopy(fields()[16].schema(), other.deliveryInfo);
        fieldSetFlags()[16] = true;
      }
      if (other.hasDeliveryInfoBuilder()) {
        this.deliveryInfoBuilder = com.diviso.graeshoppe.order.avro.DeliveryInfo.newBuilder(other.getDeliveryInfoBuilder());
      }
      if (isValidValue(fields()[17], other.approvalDetails)) {
        this.approvalDetails = data().deepCopy(fields()[17].schema(), other.approvalDetails);
        fieldSetFlags()[17] = true;
      }
      if (other.hasApprovalDetailsBuilder()) {
        this.approvalDetailsBuilder = com.diviso.graeshoppe.order.avro.ApprovalDetails.newBuilder(other.getApprovalDetailsBuilder());
      }
      if (isValidValue(fields()[18], other.status)) {
        this.status = data().deepCopy(fields()[18].schema(), other.status);
        fieldSetFlags()[18] = true;
      }
      if (other.hasStatusBuilder()) {
        this.statusBuilder = com.diviso.graeshoppe.order.avro.Status.newBuilder(other.getStatusBuilder());
      }
      if (isValidValue(fields()[19], other.orderLines)) {
        this.orderLines = data().deepCopy(fields()[19].schema(), other.orderLines);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.offerLines)) {
        this.offerLines = data().deepCopy(fields()[20].schema(), other.offerLines);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.eventType)) {
        this.eventType = data().deepCopy(fields()[21].schema(), other.eventType);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.nextTaskId)) {
        this.nextTaskId = data().deepCopy(fields()[22].schema(), other.nextTaskId);
        fieldSetFlags()[22] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Order instance
     * @param other The existing instance to copy.
     */
    private Builder(com.diviso.graeshoppe.order.avro.Order other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customerId)) {
        this.customerId = data().deepCopy(fields()[1].schema(), other.customerId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.storeId)) {
        this.storeId = data().deepCopy(fields()[2].schema(), other.storeId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.date)) {
        this.date = data().deepCopy(fields()[3].schema(), other.date);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.subTotal)) {
        this.subTotal = data().deepCopy(fields()[4].schema(), other.subTotal);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.discountAmount)) {
        this.discountAmount = data().deepCopy(fields()[5].schema(), other.discountAmount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.grandTotal)) {
        this.grandTotal = data().deepCopy(fields()[6].schema(), other.grandTotal);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.paymentRef)) {
        this.paymentRef = data().deepCopy(fields()[7].schema(), other.paymentRef);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.paymentMode)) {
        this.paymentMode = data().deepCopy(fields()[8].schema(), other.paymentMode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.allergyNote)) {
        this.allergyNote = data().deepCopy(fields()[9].schema(), other.allergyNote);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.preOrderDate)) {
        this.preOrderDate = data().deepCopy(fields()[10].schema(), other.preOrderDate);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.email)) {
        this.email = data().deepCopy(fields()[11].schema(), other.email);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.timeZone)) {
        this.timeZone = data().deepCopy(fields()[12].schema(), other.timeZone);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.customerPhone)) {
        this.customerPhone = data().deepCopy(fields()[13].schema(), other.customerPhone);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.orderCountRestaurant)) {
        this.orderCountRestaurant = data().deepCopy(fields()[14].schema(), other.orderCountRestaurant);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.orderCountgraeshoppe)) {
        this.orderCountgraeshoppe = data().deepCopy(fields()[15].schema(), other.orderCountgraeshoppe);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.deliveryInfo)) {
        this.deliveryInfo = data().deepCopy(fields()[16].schema(), other.deliveryInfo);
        fieldSetFlags()[16] = true;
      }
      this.deliveryInfoBuilder = null;
      if (isValidValue(fields()[17], other.approvalDetails)) {
        this.approvalDetails = data().deepCopy(fields()[17].schema(), other.approvalDetails);
        fieldSetFlags()[17] = true;
      }
      this.approvalDetailsBuilder = null;
      if (isValidValue(fields()[18], other.status)) {
        this.status = data().deepCopy(fields()[18].schema(), other.status);
        fieldSetFlags()[18] = true;
      }
      this.statusBuilder = null;
      if (isValidValue(fields()[19], other.orderLines)) {
        this.orderLines = data().deepCopy(fields()[19].schema(), other.orderLines);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.offerLines)) {
        this.offerLines = data().deepCopy(fields()[20].schema(), other.offerLines);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.eventType)) {
        this.eventType = data().deepCopy(fields()[21].schema(), other.eventType);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.nextTaskId)) {
        this.nextTaskId = data().deepCopy(fields()[22].schema(), other.nextTaskId);
        fieldSetFlags()[22] = true;
      }
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public java.lang.String getOrderId() {
      return orderId;
    }

    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setOrderId(java.lang.String value) {
      validate(fields()[0], value);
      this.orderId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.String getCustomerId() {
      return customerId;
    }

    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setCustomerId(java.lang.String value) {
      validate(fields()[1], value);
      this.customerId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeId' field.
      * @return The value.
      */
    public java.lang.String getStoreId() {
      return storeId;
    }

    /**
      * Sets the value of the 'storeId' field.
      * @param value The value of 'storeId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setStoreId(java.lang.String value) {
      validate(fields()[2], value);
      this.storeId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'storeId' field has been set.
      * @return True if the 'storeId' field has been set, false otherwise.
      */
    public boolean hasStoreId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'storeId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearStoreId() {
      storeId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'date' field.
      * @return The value.
      */
    public java.lang.Long getDate() {
      return date;
    }

    /**
      * Sets the value of the 'date' field.
      * @param value The value of 'date'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setDate(long value) {
      validate(fields()[3], value);
      this.date = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'date' field has been set.
      * @return True if the 'date' field has been set, false otherwise.
      */
    public boolean hasDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'date' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearDate() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'subTotal' field.
      * @return The value.
      */
    public java.lang.Double getSubTotal() {
      return subTotal;
    }

    /**
      * Sets the value of the 'subTotal' field.
      * @param value The value of 'subTotal'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setSubTotal(double value) {
      validate(fields()[4], value);
      this.subTotal = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'subTotal' field has been set.
      * @return True if the 'subTotal' field has been set, false otherwise.
      */
    public boolean hasSubTotal() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'subTotal' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearSubTotal() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'discountAmount' field.
      * @return The value.
      */
    public java.lang.Double getDiscountAmount() {
      return discountAmount;
    }

    /**
      * Sets the value of the 'discountAmount' field.
      * @param value The value of 'discountAmount'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setDiscountAmount(double value) {
      validate(fields()[5], value);
      this.discountAmount = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'discountAmount' field has been set.
      * @return True if the 'discountAmount' field has been set, false otherwise.
      */
    public boolean hasDiscountAmount() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'discountAmount' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearDiscountAmount() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'grandTotal' field.
      * @return The value.
      */
    public java.lang.Double getGrandTotal() {
      return grandTotal;
    }

    /**
      * Sets the value of the 'grandTotal' field.
      * @param value The value of 'grandTotal'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setGrandTotal(double value) {
      validate(fields()[6], value);
      this.grandTotal = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'grandTotal' field has been set.
      * @return True if the 'grandTotal' field has been set, false otherwise.
      */
    public boolean hasGrandTotal() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'grandTotal' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearGrandTotal() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentRef' field.
      * @return The value.
      */
    public java.lang.String getPaymentRef() {
      return paymentRef;
    }

    /**
      * Sets the value of the 'paymentRef' field.
      * @param value The value of 'paymentRef'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setPaymentRef(java.lang.String value) {
      validate(fields()[7], value);
      this.paymentRef = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentRef' field has been set.
      * @return True if the 'paymentRef' field has been set, false otherwise.
      */
    public boolean hasPaymentRef() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'paymentRef' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearPaymentRef() {
      paymentRef = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentMode' field.
      * @return The value.
      */
    public java.lang.String getPaymentMode() {
      return paymentMode;
    }

    /**
      * Sets the value of the 'paymentMode' field.
      * @param value The value of 'paymentMode'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setPaymentMode(java.lang.String value) {
      validate(fields()[8], value);
      this.paymentMode = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentMode' field has been set.
      * @return True if the 'paymentMode' field has been set, false otherwise.
      */
    public boolean hasPaymentMode() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'paymentMode' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearPaymentMode() {
      paymentMode = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'allergyNote' field.
      * @return The value.
      */
    public java.lang.String getAllergyNote() {
      return allergyNote;
    }

    /**
      * Sets the value of the 'allergyNote' field.
      * @param value The value of 'allergyNote'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setAllergyNote(java.lang.String value) {
      validate(fields()[9], value);
      this.allergyNote = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'allergyNote' field has been set.
      * @return True if the 'allergyNote' field has been set, false otherwise.
      */
    public boolean hasAllergyNote() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'allergyNote' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearAllergyNote() {
      allergyNote = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'preOrderDate' field.
      * @return The value.
      */
    public java.lang.Long getPreOrderDate() {
      return preOrderDate;
    }

    /**
      * Sets the value of the 'preOrderDate' field.
      * @param value The value of 'preOrderDate'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setPreOrderDate(long value) {
      validate(fields()[10], value);
      this.preOrderDate = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'preOrderDate' field has been set.
      * @return True if the 'preOrderDate' field has been set, false otherwise.
      */
    public boolean hasPreOrderDate() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'preOrderDate' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearPreOrderDate() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setEmail(java.lang.String value) {
      validate(fields()[11], value);
      this.email = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearEmail() {
      email = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeZone' field.
      * @return The value.
      */
    public java.lang.String getTimeZone() {
      return timeZone;
    }

    /**
      * Sets the value of the 'timeZone' field.
      * @param value The value of 'timeZone'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setTimeZone(java.lang.String value) {
      validate(fields()[12], value);
      this.timeZone = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'timeZone' field has been set.
      * @return True if the 'timeZone' field has been set, false otherwise.
      */
    public boolean hasTimeZone() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'timeZone' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearTimeZone() {
      timeZone = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerPhone' field.
      * @return The value.
      */
    public java.lang.Long getCustomerPhone() {
      return customerPhone;
    }

    /**
      * Sets the value of the 'customerPhone' field.
      * @param value The value of 'customerPhone'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setCustomerPhone(long value) {
      validate(fields()[13], value);
      this.customerPhone = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'customerPhone' field has been set.
      * @return True if the 'customerPhone' field has been set, false otherwise.
      */
    public boolean hasCustomerPhone() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'customerPhone' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearCustomerPhone() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderCountRestaurant' field.
      * @return The value.
      */
    public java.lang.Long getOrderCountRestaurant() {
      return orderCountRestaurant;
    }

    /**
      * Sets the value of the 'orderCountRestaurant' field.
      * @param value The value of 'orderCountRestaurant'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setOrderCountRestaurant(java.lang.Long value) {
      validate(fields()[14], value);
      this.orderCountRestaurant = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'orderCountRestaurant' field has been set.
      * @return True if the 'orderCountRestaurant' field has been set, false otherwise.
      */
    public boolean hasOrderCountRestaurant() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'orderCountRestaurant' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearOrderCountRestaurant() {
      orderCountRestaurant = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderCountgraeshoppe' field.
      * @return The value.
      */
    public java.lang.Long getOrderCountgraeshoppe() {
      return orderCountgraeshoppe;
    }

    /**
      * Sets the value of the 'orderCountgraeshoppe' field.
      * @param value The value of 'orderCountgraeshoppe'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setOrderCountgraeshoppe(java.lang.Long value) {
      validate(fields()[15], value);
      this.orderCountgraeshoppe = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'orderCountgraeshoppe' field has been set.
      * @return True if the 'orderCountgraeshoppe' field has been set, false otherwise.
      */
    public boolean hasOrderCountgraeshoppe() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'orderCountgraeshoppe' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearOrderCountgraeshoppe() {
      orderCountgraeshoppe = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryInfo' field.
      * @return The value.
      */
    public com.diviso.graeshoppe.order.avro.DeliveryInfo getDeliveryInfo() {
      return deliveryInfo;
    }

    /**
      * Sets the value of the 'deliveryInfo' field.
      * @param value The value of 'deliveryInfo'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setDeliveryInfo(com.diviso.graeshoppe.order.avro.DeliveryInfo value) {
      validate(fields()[16], value);
      this.deliveryInfoBuilder = null;
      this.deliveryInfo = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryInfo' field has been set.
      * @return True if the 'deliveryInfo' field has been set, false otherwise.
      */
    public boolean hasDeliveryInfo() {
      return fieldSetFlags()[16];
    }

    /**
     * Gets the Builder instance for the 'deliveryInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.diviso.graeshoppe.order.avro.DeliveryInfo.Builder getDeliveryInfoBuilder() {
      if (deliveryInfoBuilder == null) {
        if (hasDeliveryInfo()) {
          setDeliveryInfoBuilder(com.diviso.graeshoppe.order.avro.DeliveryInfo.newBuilder(deliveryInfo));
        } else {
          setDeliveryInfoBuilder(com.diviso.graeshoppe.order.avro.DeliveryInfo.newBuilder());
        }
      }
      return deliveryInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'deliveryInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.diviso.graeshoppe.order.avro.Order.Builder setDeliveryInfoBuilder(com.diviso.graeshoppe.order.avro.DeliveryInfo.Builder value) {
      clearDeliveryInfo();
      deliveryInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'deliveryInfo' field has an active Builder instance
     * @return True if the 'deliveryInfo' field has an active Builder instance
     */
    public boolean hasDeliveryInfoBuilder() {
      return deliveryInfoBuilder != null;
    }

    /**
      * Clears the value of the 'deliveryInfo' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearDeliveryInfo() {
      deliveryInfo = null;
      deliveryInfoBuilder = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'approvalDetails' field.
      * @return The value.
      */
    public com.diviso.graeshoppe.order.avro.ApprovalDetails getApprovalDetails() {
      return approvalDetails;
    }

    /**
      * Sets the value of the 'approvalDetails' field.
      * @param value The value of 'approvalDetails'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setApprovalDetails(com.diviso.graeshoppe.order.avro.ApprovalDetails value) {
      validate(fields()[17], value);
      this.approvalDetailsBuilder = null;
      this.approvalDetails = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'approvalDetails' field has been set.
      * @return True if the 'approvalDetails' field has been set, false otherwise.
      */
    public boolean hasApprovalDetails() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'approvalDetails' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.diviso.graeshoppe.order.avro.ApprovalDetails.Builder getApprovalDetailsBuilder() {
      if (approvalDetailsBuilder == null) {
        if (hasApprovalDetails()) {
          setApprovalDetailsBuilder(com.diviso.graeshoppe.order.avro.ApprovalDetails.newBuilder(approvalDetails));
        } else {
          setApprovalDetailsBuilder(com.diviso.graeshoppe.order.avro.ApprovalDetails.newBuilder());
        }
      }
      return approvalDetailsBuilder;
    }

    /**
     * Sets the Builder instance for the 'approvalDetails' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.diviso.graeshoppe.order.avro.Order.Builder setApprovalDetailsBuilder(com.diviso.graeshoppe.order.avro.ApprovalDetails.Builder value) {
      clearApprovalDetails();
      approvalDetailsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'approvalDetails' field has an active Builder instance
     * @return True if the 'approvalDetails' field has an active Builder instance
     */
    public boolean hasApprovalDetailsBuilder() {
      return approvalDetailsBuilder != null;
    }

    /**
      * Clears the value of the 'approvalDetails' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearApprovalDetails() {
      approvalDetails = null;
      approvalDetailsBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.diviso.graeshoppe.order.avro.Status getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setStatus(com.diviso.graeshoppe.order.avro.Status value) {
      validate(fields()[18], value);
      this.statusBuilder = null;
      this.status = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[18];
    }

    /**
     * Gets the Builder instance for the 'status' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.diviso.graeshoppe.order.avro.Status.Builder getStatusBuilder() {
      if (statusBuilder == null) {
        if (hasStatus()) {
          setStatusBuilder(com.diviso.graeshoppe.order.avro.Status.newBuilder(status));
        } else {
          setStatusBuilder(com.diviso.graeshoppe.order.avro.Status.newBuilder());
        }
      }
      return statusBuilder;
    }

    /**
     * Sets the Builder instance for the 'status' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.diviso.graeshoppe.order.avro.Order.Builder setStatusBuilder(com.diviso.graeshoppe.order.avro.Status.Builder value) {
      clearStatus();
      statusBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'status' field has an active Builder instance
     * @return True if the 'status' field has an active Builder instance
     */
    public boolean hasStatusBuilder() {
      return statusBuilder != null;
    }

    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearStatus() {
      status = null;
      statusBuilder = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderLines' field.
      * @return The value.
      */
    public java.util.List<com.diviso.graeshoppe.order.avro.OrderLine> getOrderLines() {
      return orderLines;
    }

    /**
      * Sets the value of the 'orderLines' field.
      * @param value The value of 'orderLines'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setOrderLines(java.util.List<com.diviso.graeshoppe.order.avro.OrderLine> value) {
      validate(fields()[19], value);
      this.orderLines = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'orderLines' field has been set.
      * @return True if the 'orderLines' field has been set, false otherwise.
      */
    public boolean hasOrderLines() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'orderLines' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearOrderLines() {
      orderLines = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'offerLines' field.
      * @return The value.
      */
    public java.util.List<com.diviso.graeshoppe.order.avro.Offer> getOfferLines() {
      return offerLines;
    }

    /**
      * Sets the value of the 'offerLines' field.
      * @param value The value of 'offerLines'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setOfferLines(java.util.List<com.diviso.graeshoppe.order.avro.Offer> value) {
      validate(fields()[20], value);
      this.offerLines = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'offerLines' field has been set.
      * @return True if the 'offerLines' field has been set, false otherwise.
      */
    public boolean hasOfferLines() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'offerLines' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearOfferLines() {
      offerLines = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.String getEventType() {
      return eventType;
    }

    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setEventType(java.lang.String value) {
      validate(fields()[21], value);
      this.eventType = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'nextTaskId' field.
      * @return The value.
      */
    public java.lang.String getNextTaskId() {
      return nextTaskId;
    }

    /**
      * Sets the value of the 'nextTaskId' field.
      * @param value The value of 'nextTaskId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder setNextTaskId(java.lang.String value) {
      validate(fields()[22], value);
      this.nextTaskId = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'nextTaskId' field has been set.
      * @return True if the 'nextTaskId' field has been set, false otherwise.
      */
    public boolean hasNextTaskId() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'nextTaskId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.order.avro.Order.Builder clearNextTaskId() {
      nextTaskId = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Order build() {
      try {
        Order record = new Order();
        record.orderId = fieldSetFlags()[0] ? this.orderId : (java.lang.String) defaultValue(fields()[0]);
        record.customerId = fieldSetFlags()[1] ? this.customerId : (java.lang.String) defaultValue(fields()[1]);
        record.storeId = fieldSetFlags()[2] ? this.storeId : (java.lang.String) defaultValue(fields()[2]);
        record.date = fieldSetFlags()[3] ? this.date : (java.lang.Long) defaultValue(fields()[3]);
        record.subTotal = fieldSetFlags()[4] ? this.subTotal : (java.lang.Double) defaultValue(fields()[4]);
        record.discountAmount = fieldSetFlags()[5] ? this.discountAmount : (java.lang.Double) defaultValue(fields()[5]);
        record.grandTotal = fieldSetFlags()[6] ? this.grandTotal : (java.lang.Double) defaultValue(fields()[6]);
        record.paymentRef = fieldSetFlags()[7] ? this.paymentRef : (java.lang.String) defaultValue(fields()[7]);
        record.paymentMode = fieldSetFlags()[8] ? this.paymentMode : (java.lang.String) defaultValue(fields()[8]);
        record.allergyNote = fieldSetFlags()[9] ? this.allergyNote : (java.lang.String) defaultValue(fields()[9]);
        record.preOrderDate = fieldSetFlags()[10] ? this.preOrderDate : (java.lang.Long) defaultValue(fields()[10]);
        record.email = fieldSetFlags()[11] ? this.email : (java.lang.String) defaultValue(fields()[11]);
        record.timeZone = fieldSetFlags()[12] ? this.timeZone : (java.lang.String) defaultValue(fields()[12]);
        record.customerPhone = fieldSetFlags()[13] ? this.customerPhone : (java.lang.Long) defaultValue(fields()[13]);
        record.orderCountRestaurant = fieldSetFlags()[14] ? this.orderCountRestaurant : (java.lang.Long) defaultValue(fields()[14]);
        record.orderCountgraeshoppe = fieldSetFlags()[15] ? this.orderCountgraeshoppe : (java.lang.Long) defaultValue(fields()[15]);
        if (deliveryInfoBuilder != null) {
          record.deliveryInfo = this.deliveryInfoBuilder.build();
        } else {
          record.deliveryInfo = fieldSetFlags()[16] ? this.deliveryInfo : (com.diviso.graeshoppe.order.avro.DeliveryInfo) defaultValue(fields()[16]);
        }
        if (approvalDetailsBuilder != null) {
          record.approvalDetails = this.approvalDetailsBuilder.build();
        } else {
          record.approvalDetails = fieldSetFlags()[17] ? this.approvalDetails : (com.diviso.graeshoppe.order.avro.ApprovalDetails) defaultValue(fields()[17]);
        }
        if (statusBuilder != null) {
          record.status = this.statusBuilder.build();
        } else {
          record.status = fieldSetFlags()[18] ? this.status : (com.diviso.graeshoppe.order.avro.Status) defaultValue(fields()[18]);
        }
        record.orderLines = fieldSetFlags()[19] ? this.orderLines : (java.util.List<com.diviso.graeshoppe.order.avro.OrderLine>) defaultValue(fields()[19]);
        record.offerLines = fieldSetFlags()[20] ? this.offerLines : (java.util.List<com.diviso.graeshoppe.order.avro.Offer>) defaultValue(fields()[20]);
        record.eventType = fieldSetFlags()[21] ? this.eventType : (java.lang.String) defaultValue(fields()[21]);
        record.nextTaskId = fieldSetFlags()[22] ? this.nextTaskId : (java.lang.String) defaultValue(fields()[22]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Order>
    WRITER$ = (org.apache.avro.io.DatumWriter<Order>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Order>
    READER$ = (org.apache.avro.io.DatumReader<Order>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
